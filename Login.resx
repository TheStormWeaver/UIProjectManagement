<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>