<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAANcAAADxCAYAAABYiCKeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EAAACxABrSO9dQAAGRJJREFUeF7tnTuyJbtxRTkEaQYMjkARmoAMDkAOfVmy5cmlSVMuPdmy5NPRAGRo
        AozQCBSaweNZ/TofcdGJTwKJKhQqd8SK7otThcJv41c49/7qp59+CvbmHz78y4ffZxDGZ9o9wQaogcHt
        /NOH//zQK67lHi2u4CbUwOA2GIn+98OouDdGs01QA4PL+fUHy0jV0n99IE7tWcFFqIHBZfzNB9ZPq/Rv
        H3iG9uxgMWpgcAmskf7/w2rxjFiP3YAaGCyFNRHTtqv1Px9iPXYhamCwBKZn//7hbpGGWI9dgBoYuMO6
        6oopYK9IC2mK9dhC1MDAjX/8MLO1vlqkjTRqaQ8mUQODaZh2ea6rGGnYqpfTGfzfcyQkrX/3QctLMIga
        GAzDNIvtb0+VttMJ897Gj617R9TAYAjvrfXeF8ErRknOLWrPCgyogYEJtrfZ5vbS6Dpo9uhUrjhKNYka
        GHTBiOF5ZEl28LRnWSAOzxGUPMbW/QBqYFBF1jqeDdj73RNp9H6nRp5jPWZADQyKeG+ts1ZaOfViB9Bz
        PUbe4yhVJ2pg8APejZRR78pGyrOe1CkcgRoY/MJJ0yuZznqKsompYgE1MPgG29Ge6yp6+x02BnbdiDkO
        NfDlvGVLmzR5v0KIqWKCGvhSVvToT3gZe+oIfTtq4MuItcjPafU+tvX6rXs18EWs2EVbdQCW0YBpF6wa
        GZ6+K7oVauALoIF6NiIMuqoR0ftraSVs1cjg/T7vld+CVgMPhsb4pK114q1tOmCAVSMlzyZvnusxyv41
        6zE18FC8G8rqM3fE3bObR55WGQxIh2eHRHqpC+1ZR6EGHgbTkadNcTCLpSNYbTAgz95b90d/C1oNPAR6
        XO/F+RVb61Zjia4wGLC2HElfSdTRFem+HDXw4bBWuOrbwN6MGkt0lcGeXMaXoQY+mCf3qrPGEl1lMHjq
        7OAS1MAH8vT1gJexRFcaDJ64rl2OGvggTtjJ8jaW6GqDwdN2ZJeiBj6EE97BrDKWiLiv3pFj3fSkd4nL
        UAM3hwbpOQW8awrCM1caK9UdR5DIn+d6bOUL8yWogRvj2dMTz13n3nju1bozr17rMersMQZTAzfF01h3
        TjNmjCUbLaPlcJfBKGvK3EOPMZgauCFUjkfvxzTlzgXy7Igl29QzHc1dBgPK3uM7c+R9+zWYGrghsxWC
        Me/e2p01Fko7hqcaDKiL2c6SjlKLexvUwM2gIkZF42M6osV7JR7GooPJ432ywWD2W9Bbn01UAzdjdMeJ
        7eAdpg4exkIlMzzdYNTR6FEqRj8tzi1QAzdiZNTCjLsseL2MhXm0+IUZg60e2WUzQyh1eORhpCPddvRS
        AzfC8jKSxrVDTyww5fES5aA9I2XGYD3xj4CR8neS/FybUVh3Q7Xp8haogRthKeRdRivwPqHQuxmzk8E0
        Y4laBiMfvSK/Why3owZugqWAd9i0ELyNZV1XUG6lRt2Sl8FIQ2s3sGUw6rRXd+8Eq6iBm8D0oFe1SroS
        b2OhkY6jNmq0NGswy+hZMxjhvfHstBz4BTVwE3p7rl3m3CuMhUZfet9hsJqxqE8tPTWD9b7f3Gnm8gtq
        4Cb0mmuHgl1lrNkXpVcarDViMXUrpadksCe1gR9QAzfBo2DTRk/F0wC062ZYZSzkMd25wmA9U0EZgS0G
        C3MtYrZgtUbvbbCVxkJabz7CjMGYmtXS0WMslN5TSk9eP2GuRcwUbK3RexiMxrHaWL2jRi8zBtNGFeg1
        Vml62+oAw1yLGClYSwManXLNNFKLVpw88DRYr7FQraOoGSzMtQhrwdYaTunsmtVgVxlr5Zk58tC7C5dL
        DEa59RoLtRp/yWCxW7gIi7lqjZ5w4qNBaOo12FXGQnQGWho80Rp0j0a+KtKTn9H0oDCXkV5zUXG1Rp+a
        Z9RgVxoLXfWFzpkGbVHvSDyanjCXkV5z1cTUAmOk8VoNdrWxZKS9iqsM1ruJNJKeMJcRD3OVpiO9Brva
        WOiO3zh7hcEs+bKmJ8xlxMNctelVy2B3GAvlI+1VrDSY7P5pzy1hSU+Yy8isuXqODpUMRi97h7HuPie5
        wmCU42iHEbuFi5g1V+97opLB7tAO36r1NBhxzYzEvW0gzGXkipFL2MFgTJ20tN3BbNkjj7VjmGsRV1ew
        x/NmdMW7LQuzHY7H64Qw1yI8GjvTEi3uHMtRnlWyLvivYMZgvWVfI8y1iFlzYZae3nMHY6087jTLqMFG
        dghzwlyLmDVXz5RwB2Mhj/XJSu4yWJhrETPm6jnlsIux0FXHnWaYMdjoLmiYaxEz5mr9NiA+38VYd7/b
        sjCzBuNeLc4aYa5FjJqrNWrNNJAVGml0d3KlwcJcixg1FyrN83czFqOnls7dYZo3OvJbDBbmWsSMubRt
        4N2MhTy2q+9iZs3aa7Aw1yJmzIXSYzc7Ggtt+ZtiDaw2WJhrEbPmku3tXY2187stCysNFuZaxKy5aLy7
        GgvN/sLPnVhlsDDXImbN9QTtcAreixmDlcwR5lrEG8xFY7zry5ErmDGYtrkT5lrEG8yFnvQSuQdPg4W5
        FvEWc6GTpoeAwUa/yZ0aLMy1iDeZ67TpIZCfWYOFuRbxJnOh06aHMGuwMNci3mYudNr0EGYM1rt2C3MZ
        eaO5TpwewozBehTmMvJGc6ETp4ew0mBhLiNvNRdit00rk6ezymBhLiNvNdcpZw5LrDBYmMvIW8319JPy
        PWAwzlZ6Kcxl5I3m0o4AnQz59VCYy8jbzHXqTmELD4OFuYy8zVy7/3q1lcwaLMxl5E3mYoGvlcGbmDFY
        mMvIm8z1hk2MHkYNFuYy8hZz0aC0/L+VEYOFuYy8wVxv3cRoYTVYmMvIG8zV8xuQ3gp/UqlXYS4jp5vr
        pF9Qs4peg4W5jJxurlPPD3rS2wbCXEZONtduf0VyV8JcizjVXLGJ0U+YaxGnmis2MfoJcy3iRHPFJoaN
        MNciTjTXE/6C5E6EuRZxmrm2bACbE+ZaxEnm4tvFsYlhJ8y1iJPMdeKvTLuCMNciTjFXbGKME+ZaxCnm
        ilFrnDDXIk4x16m/h/AKwlyLOMVcKLbgxwhzLeIkc21Z+Q8gzLWIk8zFeUItj0GdMNciTjIXijOFdsJc
        izjNXPEbnuz0ft0/zGWELezTFL/lqR9OtDCd7tGWswI1cBP4pu5pit/01I9l5rJlp6UGbkRvz/UkxRnD
        NnSslrrX4rgdNXAjRn6H3e7acn2wESwHLMba9iW9GrgRDPen6fS/vzUKL9pH/qzQtsfL1MDNoDGeptiW
        /ytMky2/ozDV1h2VGrgZJ45ecVL+Z+hkZtbVWx+KVgM3hHn1aXrz7y2kw5z9063bd1Bq4IZY3nk8RW/c
        lmdd5dFR0ha233VVAzfFuj37BL1lW558skvqUX/E8YhRXw3cmNMM9oa/Jsm6yGtT6jHGAjVwcyjc2fn6
        Ljp5W556GtlaL4myeoyxQA18ADLNOEFb73gNQN14v/ynrh83hVYDH4TXAvlOnbQtzzTXc9pO2Tz2W9xq
        4APx2Nq9U0//NQCUv+fLfuIiTu1Zj0ENfDDePedVeuq2vPfMgbo7ZpNHDXw4zM1Hj9PcJRrVk9YUK9a8
        dDCPW1fVUAMPwXu3arWect5w9shSLuroUbuAvaiBh+H5nmWldt+WZw3kvbV+9AFmNfBQvE4IrNSOi3im
        ap5b69TBI7fWraiBB8MC3PsdjKd2++Kfd4dE/p6+M9qNGvgCdt6636HxeU+lKevHb61bUQNfhPfi3EN3
        /qV/jO25rqJs33B+UkUNfBkrtpVnRIO8ej3C87xfXxDf8euqGmrgS/HutWd05S7aiq3116yraqiBL4e1
        wd1b96xRtLR54r3upMxOO4Q8hRoYfOPurftVGwCMKt5Hligr7VmvRg0MfoE1w11b997nDWVt6dlhkMaY
        AhZQA4MfuOsolVfD9d5apyxet7VuRQ0MirD4v3I9Njvd8u4UGPWOPrLkiRoYVJHp1RWiMWtpaLFiOkue
        X721bkUNDLrw3hgoyTpSxLeBN0ENDEx4b2nnonFrz83xfoVAXLGumkANDIZY+S3o2vedVmytv/bIkidq
        YDAMa5IV34LWtuVXrP14TqyrnFADg2lWbN0TH8bFUJjAe1115LeB70QNDNzY/VvQpC221hehBgauyPRt
        1XpsVLG1vhg1MFgCGw/e755G9KpvA9+JGhgsZfXWfUmv/DbwnaiBwSV4f4+qpNhavwk1MLiMVVv3otd/
        G/hO1MDgclgDeW7dx9b6BqiBwW3MHmHi3vg28CaogcHtsB6zHGni2nhftRlqYLANrJcYzXgnpcFnsaba
        FDUwCIJ51MAgCOZRA4MgmEcNDIJgHjUwCIJ51MAgCOZRA4MgmEcNDIJgHjUwCIJ51MBga/75wx8+aPrj
        Bz7X7gt0/lYJc0ENDLblPz706E8ftPuDv/KbD5QnHZL2+TRqYCf0kB767w//mvD3H7TnvZ3ffbAoRjAd
        RioMJdrSXL/9sFJMfXiG9uw3Yu3M6Ki0eN4KI1VqKtGyclIDO5kxlxafjFx5ATDFoWC0e96EdeTiei2e
        t0E7rU2nX2GuHHpqpoyiaCz9a65lU50HgWn+/KGlV5pLSKdDsY74uQy06Q2ioby9E6IMLHq1uYBNjv/7
        gGLDI6hhNdeyDlsN7ORKcwGmQgz1y95NfCBuKiidUrDu6zE1FaVVLh0D4buPvKSx1DjZYOIz7b4ZpMyk
        88wladLu1Silv6Qw13ek4EqFbU1T/j6oVjGYLb02Rbsvv55rWDOJ0dLPeqilTZOl0eRxs9ZNOxP+T1mJ
        MNpsB1fKT1o20tHJ2pvy0zq5kjFHlaZhGDWwkzvMBRQ0halV7qi5iIv/5w0/Pwkh4QLPKy2aS2aUhpo3
        4BaYxaIec5XSr63b2LFNRVmNrO9qZUac2j3AfWIy6kW7BkqmLSlGrgQqFGm9izVNNHIaOJXN/zXDyuZB
        /rxWYy+ZSxDjkmbt8xxvc0k5aiq9+tBk6eVrz0SYR7svRcpNOsacMNck9HBMEfJwa5owAHGVKqpET0Nv
        mQsknh6DeZqr1cgt5kI9Bms9E/XWgxhMe+UQ5ppE1i55+Eia6C0t6wdGuh71mAtoDOSl9aLcy1w8h+fV
        ZDUXwjzaPdBbZpZOjnrTrg9zTSI9V24Ka5p6GnUOpulRr7mAhqKNxCle5qJBtjRiLsqy1EnJWqkl6wxC
        I8w1iRRg3gisabKeZLBUnMVckm7+1T4HD3P1ls+IuRDlk99jSXeY6ztvNFfvqIUs5gIaVm308jBXz6iF
        Rs2l5dlSZmGu79xpLtnBy8NXmssat9VcYp7S1GrWXBimV6PmQunrhd61lijM9Z07zcUcHvJwa2VazCXr
        vF5ZzYWpUGljYNZclkY3Yy6eI9dbG3qY6zt3mUt6YBp76bNeWczFlM2ikYaCIbV8way5ZLTv0Yy50jK9
        osxywlwTSOHx/PyzleayrB3QSEPhntK6a9ZcxN2rGXOl+e7dJRSFub5zh7nEPKUp19PNhbFK982ay5r+
        UaXpv6LMcsJcg0hPWFqXWNO0m7lIzw7mKo1cVsJcg1xtLhoeqm1XrzTXFVMc7lk1LbSk38tcMS0c5Cpz
        sYtGoSN6wtJWNaw01xWLcxrjqg0NS/q9zHVFmeWEuToh43IODmO1Kn2luayVZm0oT9iKt7K6zDSsz+R6
        LZ5p1MBOZsxFhmovS/MCogesjVjCSnOtfiEqp8Zr5WJRbi5L+r3M9YSXyMeZq1dMk2qnrXNWmgssC3Rr
        QyEtpfUWWM1FWeRxkKYeeZkLVpaZhrWcNHNRD7S9PNyEGtjJjLlYV5QKnYyRYXo97bk1rGmqNWYNS8VZ
        GgqNGWmGEKyNRiu/3jhGzEVZUqd5+KoyA9pJ/s0GaxvIzSV18VhzefaMKdY0jfSUvT2xJW4aZsvoVnOV
        ppc9O3jW+qGBIhq69nnPM5G1Q5L1eJpeWbv2KjcXMwiUh5tRAzt5q7l61xG9cWu9r4bXCNCTfkv9yFoR
        kUbtGu8yAzGsZgLi6VW6Oyt50UZgM2pgJ281F/Q09J64Jb38q32eYjFXK75WXL31k5Z3q6fvSX/vNF3M
        U3pmr5kRRmK0Iy6RNqU2owZ2Ym3IqZ5uLmg1llbcUpm9Gza95uptoLX4euonbYxeeWhtMJGulrGE3vJK
        xQyip6PrQg3sJJ0OWHWCuYDnybw/VyluaSD0mKUeUso2/bynsRCnpWxL6a+ZhTRJA+dfa13WyqzWMZB/
        7mM62DuykI/Ss3KN5KWKGtjJSM8gOsVcAvP2XHnc9LQ0HtTb66ZxpCOFpppZW+TppwGndSTTJtKDyAdl
        ncZhRSszjJA+l/zwXMLJH+WSxtFLWvapyCefjZZbFTUwGIaK0hoN4jNL4+B6xL/8LLtYmmg4pd1BC630
        S1o8kXg1SeOfNfItqIHBNtCL07hkZyyVNLxVs4BgEjUwCIJ51MAgCOZRA4MgmEcNDIJgHjUwCIJ51MAg
        COZRAxPY5vV4fxLbxcGpyAt2+PLZlx8UuIGXitpnvagPDoKHI6aS41Vmc8mRkdE35BwrQcSjfR4ET4NZ
        GANOfmbRZC6cKSKikelherJA+/ztUEm9J8qDe2Gg0M4nin442vblh4z81Lt19MHJqaIRfUUO544eRg2u
        JW/PuX6Y3X35IUM7KNrbEGQ6mMqydpMzdRhaO1eHOKENXNc61cw1NdJr6QTIO6ewRYzcpKV3ekx6yK+c
        Ik9FGHkizvzZGpQ5z06nIdxP/D0bRXlec9JryR95T8tc8l6qe5km5XmVutHu0ZjJZ56nnPRaa/1KHFpd
        piJOuZb/V82VZlJEWE+FaoYgM9q1KUw9SRiSrxikxpGK1MT1pcbfEtfwrLTAS+L5efwCaU0rIS2vfCbA
        dbWyJC9peqh8mZrzmYjyqk3ZW+Ia4ms1HsQ1Ei9pl7qqibZQS59HPlvimtH67TUXn3eZSxt5RGkBaxB5
        Sa0RRkz5LXEVaoWkTT9b4rnESdqp0FoekNaLE5Z3SHlZ5eJ6rUyIKxfpSq9JK7vWgFuiMZEO/uUZlF+e
        j1SUjVxDPXGPlt5Upfr0ymdLHvXbuofPv9zz5YcEc0TfqZkSle4TqODWNZAWeC4KMb++Ja1XrCk3Db24
        1iBb5kLclz6bytdUa3RotOERTz6C1sqX9PKsvFMgrKY8bZ75bGm2fsHsiS8/JLQKCmk9bus+LdEj1Cof
        5Y2lpfTanntoYOm1VJ6mPL8lScXQAEqjcqvRIa1jaim/Hlrlm6fFeo93PltKr+25J69fcDEXDbNHeQ/S
        ergo70FGsFZ+S+m1I/dooxYinel1Jcl1tTLsaXT5KAgtpdcK1vK13uOdz5bS+EbvcTFXa/6cShZ/relg
        Km1NlEKhkQbipmAFEi/3WioSWkqvHbmnJNJpua428vc0OpSvF1pKrxWs5Wu9xzufLaXxjd7jYi52a3qm
        hSIKgwIg8p77SotbIA5tFCBNEj/TidKUQpRXUEvptSP3lNJDuaTXlSRrgpp6G510eEJL6bWCxSjWe1bk
        s6U0vtF7XMyFGCFIfK9o9Nzbc482n4XSukXiFpi27mauUsH3mov0Qk08Q66DUkfW+0xReq2w0lz8W9NI
        PluS61Jayq+fNhemQvQuUMpYLtnckPtbyjdDagnPGwtYK7+l9NqReygrzfB52jXJSN5qdNQF8bXYfeRa
        kc+W5LqUlvLrp81FRZNw+RkTlBbrojzSHuUNoPaMND0CYTVdbS5gRM07I35OP8+VTpFb61atQffQknaP
        tXwt96zIZ0se90ybi943v6gWadp4hFYho/Q+CrOmp5iLBTadBB1HOophIMowNR7/1zZ2ap3MSKODlrR7
        VpoLvPPZksc9U+aSHiWfsgEbCpq0a1uJEMm7KAqzpieYS8ouH6kwEOUh8LPkW6O07kQ9jU6Lu6X8elht
        Lu98tpReO3pPq13z+Zd70h/4kB4lDRNYU+S9zQ+Rfac17ItkK5WCqukJ5kobC+VE+lowwuWNhHSX1Gp0
        xMWzPfJO+mrS0mK5xzufLaX3j95jNdef0x/odRmh0rCUtEDSHlojN6Km9Fm13T8qLY0brJXfUnrtyD2t
        9JREOdFxpXGVZgm1RiebT1q9tJRfD6vNBZ75bCm9dvQe0lVTai6u/ZP8QKJR/gIyR9yrTQdTasN+Krm+
        tsuYm4tnt8ybV1BL6bUj9zAKjSrv8aQB5So1OnpyaXC5UaGl/Hq4wlye+WwpvXbmnlq7o81zjbTP38pN
        mArl0xSNlgFB4mspXdSXhl0SynVABqhErVJS5Q22pfTakXuo7JbhS8rTKvHljVUrd+7luYwCmrGgJe2e
        K8wFXvlsKb9+9J7aIIAkL9/yIDeRaBpsGtEMmLRH4naBxJemiIRLwbcqks/TeFtKrx29h0rPdwoRaQE+
        o5Gk0yEaTK1DI78SH9emcUhjK/X0QkvaPa3y9TKXMJvPlrzuAdooadJEHvj827X5jbtAQVK4Qmsa+iSk
        96Mz680X16XlQRylkerJPCmfpC1N6w91+eWHIAj8UAODIJhHDQyCYB41MAiCedTAIAjmUQODIJhHDQyC
        YB41MAiCWX761V8AI9/JWOKOX7EAAAAASUVORK5CYII=
</value>
  </data>
</root>